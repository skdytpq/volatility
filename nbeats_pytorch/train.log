[23:03:43] DeepAR.Train: Loading the datasets...
[23:04:23] DeepAR.Train: Loading the datasets...
[23:04:23] DeepAR.Data: train_len: 27688
[23:04:23] DeepAR.Data: building datasets from ../../traindata/...
[23:04:23] DeepAR.Data: test_len: 12522
[23:04:23] DeepAR.Data: building datasets from ../../traindata/...
[23:04:23] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[23:04:23] DeepAR.Data: num samples: 27688
[23:04:23] DeepAR.Train: Loading complete.
[23:04:23] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[23:04:23] DeepAR.Train: Starting training for 20 epoch(s)
[23:04:23] DeepAR.Train: begin training and evaluation
[23:04:23] DeepAR.Train: Epoch 1/20
[23:05:09] DeepAR.Train: Loading the datasets...
[23:05:09] DeepAR.Data: train_len: 27688
[23:05:09] DeepAR.Data: building datasets from ../../traindata/...
[23:05:09] DeepAR.Data: test_len: 12522
[23:05:09] DeepAR.Data: building datasets from ../../traindata/...
[23:05:09] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[23:05:09] DeepAR.Data: num samples: 27688
[23:05:09] DeepAR.Train: Loading complete.
[23:05:09] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[23:05:09] DeepAR.Train: Starting training for 20 epoch(s)
[23:05:09] DeepAR.Train: begin training and evaluation
[23:05:09] DeepAR.Train: Epoch 1/20
[23:06:29] DeepAR.Train: Loading the datasets...
[23:06:29] DeepAR.Data: train_len: 27688
[23:06:29] DeepAR.Data: building datasets from ../../traindata/...
[23:06:29] DeepAR.Data: test_len: 12522
[23:06:29] DeepAR.Data: building datasets from ../../traindata/...
[23:06:29] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[23:06:29] DeepAR.Data: num samples: 27688
[23:06:29] DeepAR.Train: Loading complete.
[23:06:29] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[23:06:29] DeepAR.Train: Starting training for 20 epoch(s)
[23:06:29] DeepAR.Train: begin training and evaluation
[23:06:29] DeepAR.Train: Epoch 1/20
[23:08:21] DeepAR.Train: Loading the datasets...
[23:08:21] DeepAR.Data: train_len: 27688
[23:08:21] DeepAR.Data: building datasets from ../../traindata/...
[23:08:21] DeepAR.Data: test_len: 12522
[23:08:21] DeepAR.Data: building datasets from ../../traindata/...
[23:08:21] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[23:08:21] DeepAR.Data: num samples: 27688
[23:08:21] DeepAR.Train: Loading complete.
[23:08:21] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[23:08:21] DeepAR.Train: Starting training for 20 epoch(s)
[23:08:21] DeepAR.Train: begin training and evaluation
[23:08:21] DeepAR.Train: Epoch 1/20
[23:10:22] DeepAR.Train: Loading the datasets...
[23:10:22] DeepAR.Data: train_len: 27688
[23:10:22] DeepAR.Data: building datasets from ../../traindata/...
[23:10:22] DeepAR.Data: test_len: 12522
[23:10:22] DeepAR.Data: building datasets from ../../traindata/...
[23:10:22] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[23:10:22] DeepAR.Data: num samples: 27688
[23:10:22] DeepAR.Train: Loading complete.
[23:10:22] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[23:10:22] DeepAR.Train: Starting training for 20 epoch(s)
[23:10:22] DeepAR.Train: begin training and evaluation
[23:10:22] DeepAR.Train: Epoch 1/20
[23:12:07] DeepAR.Train: Loading the datasets...
[23:12:07] DeepAR.Data: train_len: 27688
[23:12:07] DeepAR.Data: building datasets from ../../traindata/...
[23:12:07] DeepAR.Data: test_len: 12522
[23:12:07] DeepAR.Data: building datasets from ../../traindata/...
[23:12:07] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[23:12:07] DeepAR.Data: num samples: 27688
[23:12:07] DeepAR.Train: Loading complete.
[23:12:07] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[23:12:07] DeepAR.Train: Starting training for 20 epoch(s)
[23:12:07] DeepAR.Train: begin training and evaluation
[23:12:07] DeepAR.Train: Epoch 1/20
[23:13:14] DeepAR.Train: Loading the datasets...
[23:13:14] DeepAR.Data: train_len: 27688
[23:13:14] DeepAR.Data: building datasets from ../../traindata/...
[23:13:14] DeepAR.Data: test_len: 12522
[23:13:14] DeepAR.Data: building datasets from ../../traindata/...
[23:13:14] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[23:13:14] DeepAR.Data: num samples: 27688
[23:13:14] DeepAR.Train: Loading complete.
[23:13:14] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[23:13:14] DeepAR.Train: Starting training for 20 epoch(s)
[23:13:14] DeepAR.Train: begin training and evaluation
[23:13:14] DeepAR.Train: Epoch 1/20
[23:15:13] DeepAR.Train: Loading the datasets...
[23:15:13] DeepAR.Data: train_len: 27688
[23:15:13] DeepAR.Data: building datasets from ../../traindata/...
[23:15:13] DeepAR.Data: test_len: 12522
[23:15:13] DeepAR.Data: building datasets from ../../traindata/...
[23:15:13] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[23:15:13] DeepAR.Data: num samples: 27688
[23:15:13] DeepAR.Train: Loading complete.
[23:15:13] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[23:15:13] DeepAR.Train: Starting training for 20 epoch(s)
[23:15:13] DeepAR.Train: begin training and evaluation
[23:15:13] DeepAR.Train: Epoch 1/20
[23:17:54] DeepAR.Train: Loading the datasets...
[23:17:54] DeepAR.Data: train_len: 27688
[23:17:54] DeepAR.Data: building datasets from ../../traindata/...
[23:17:54] DeepAR.Data: test_len: 12522
[23:17:54] DeepAR.Data: building datasets from ../../traindata/...
[23:17:54] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[23:17:54] DeepAR.Data: num samples: 27688
[23:17:54] DeepAR.Train: Loading complete.
[23:17:54] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[23:17:54] DeepAR.Train: Starting training for 20 epoch(s)
[23:17:54] DeepAR.Train: begin training and evaluation
[23:17:54] DeepAR.Train: Epoch 1/20
[23:19:12] DeepAR.Train: Loading the datasets...
[23:19:12] DeepAR.Data: train_len: 27688
[23:19:12] DeepAR.Data: building datasets from ../../traindata/...
[23:19:12] DeepAR.Data: test_len: 12522
[23:19:12] DeepAR.Data: building datasets from ../../traindata/...
[23:19:12] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[23:19:12] DeepAR.Data: num samples: 27688
[23:19:12] DeepAR.Train: Loading complete.
[23:19:12] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[23:19:12] DeepAR.Train: Starting training for 20 epoch(s)
[23:19:12] DeepAR.Train: begin training and evaluation
[23:19:12] DeepAR.Train: Epoch 1/20
[23:19:52] DeepAR.Train: Loading the datasets...
[23:19:52] DeepAR.Data: train_len: 27688
[23:19:52] DeepAR.Data: building datasets from ../../traindata/...
[23:19:52] DeepAR.Data: test_len: 12522
[23:19:52] DeepAR.Data: building datasets from ../../traindata/...
[23:19:52] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[23:19:52] DeepAR.Data: num samples: 27688
[23:19:52] DeepAR.Train: Loading complete.
[23:19:52] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[23:19:52] DeepAR.Train: Starting training for 20 epoch(s)
[23:19:52] DeepAR.Train: begin training and evaluation
[23:19:52] DeepAR.Train: Epoch 1/20
[23:20:24] DeepAR.Train: Loading the datasets...
[23:20:24] DeepAR.Data: train_len: 27688
[23:20:24] DeepAR.Data: building datasets from ../../traindata/...
[23:20:24] DeepAR.Data: test_len: 12522
[23:20:24] DeepAR.Data: building datasets from ../../traindata/...
[23:20:24] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[23:20:24] DeepAR.Data: num samples: 27688
[23:20:24] DeepAR.Train: Loading complete.
[23:20:24] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[23:20:24] DeepAR.Train: Starting training for 20 epoch(s)
[23:20:24] DeepAR.Train: begin training and evaluation
[23:20:24] DeepAR.Train: Epoch 1/20
[23:22:00] DeepAR.Train: Loading the datasets...
[23:22:00] DeepAR.Data: train_len: 27688
[23:22:00] DeepAR.Data: building datasets from ../../traindata/...
[23:22:00] DeepAR.Data: test_len: 12522
[23:22:00] DeepAR.Data: building datasets from ../../traindata/...
[23:22:00] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[23:22:00] DeepAR.Data: num samples: 27688
[23:22:00] DeepAR.Train: Loading complete.
[23:22:00] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[23:22:00] DeepAR.Train: Starting training for 20 epoch(s)
[23:22:00] DeepAR.Train: begin training and evaluation
[23:22:00] DeepAR.Train: Epoch 1/20
[23:24:49] DeepAR.Train: Loading the datasets...
[23:24:49] DeepAR.Data: train_len: 27688
[23:24:49] DeepAR.Data: building datasets from ../../traindata/...
[23:24:49] DeepAR.Data: test_len: 12522
[23:24:49] DeepAR.Data: building datasets from ../../traindata/...
[23:24:49] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[23:24:49] DeepAR.Data: num samples: 27688
[23:24:49] DeepAR.Train: Loading complete.
[23:24:49] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[23:24:49] DeepAR.Train: Starting training for 20 epoch(s)
[23:24:49] DeepAR.Train: begin training and evaluation
[23:24:49] DeepAR.Train: Epoch 1/20
[23:25:03] DeepAR.Train: Loading the datasets...
[23:25:03] DeepAR.Data: train_len: 27688
[23:25:03] DeepAR.Data: building datasets from ../../traindata/...
[23:25:03] DeepAR.Data: test_len: 12522
[23:25:03] DeepAR.Data: building datasets from ../../traindata/...
[23:25:03] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[23:25:03] DeepAR.Data: num samples: 27688
[23:25:03] DeepAR.Train: Loading complete.
[23:25:03] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[23:25:03] DeepAR.Train: Starting training for 20 epoch(s)
[23:25:03] DeepAR.Train: begin training and evaluation
[23:25:03] DeepAR.Train: Epoch 1/20
[23:25:30] DeepAR.Train: Loading the datasets...
[23:25:30] DeepAR.Data: train_len: 27688
[23:25:30] DeepAR.Data: building datasets from ../../traindata/...
[23:25:30] DeepAR.Data: test_len: 12522
[23:25:30] DeepAR.Data: building datasets from ../../traindata/...
[23:25:30] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[23:25:30] DeepAR.Data: num samples: 27688
[23:25:30] DeepAR.Train: Loading complete.
[23:25:30] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[23:25:30] DeepAR.Train: Starting training for 20 epoch(s)
[23:25:30] DeepAR.Train: begin training and evaluation
[23:25:30] DeepAR.Train: Epoch 1/20
[23:25:48] DeepAR.Train: Loading the datasets...
[23:25:48] DeepAR.Data: train_len: 27688
[23:25:48] DeepAR.Data: building datasets from ../../traindata/...
[23:25:48] DeepAR.Data: test_len: 12522
[23:25:48] DeepAR.Data: building datasets from ../../traindata/...
[23:25:48] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[23:25:48] DeepAR.Data: num samples: 27688
[23:25:48] DeepAR.Train: Loading complete.
[23:25:48] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[23:25:48] DeepAR.Train: Starting training for 20 epoch(s)
[23:25:48] DeepAR.Train: begin training and evaluation
[23:25:48] DeepAR.Train: Epoch 1/20
[13:52:48] DeepAR.Train: Loading the datasets...
[13:52:48] DeepAR.Data: train_len: 27688
[13:52:48] DeepAR.Data: building datasets from ../../traindata/...
[13:52:48] DeepAR.Data: test_len: 12522
[13:52:48] DeepAR.Data: building datasets from ../../traindata/...
[13:52:48] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[13:52:48] DeepAR.Data: num samples: 27688
[13:52:48] DeepAR.Train: Loading complete.
[13:52:48] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[13:52:48] DeepAR.Train: Starting training for 20 epoch(s)
[13:52:48] DeepAR.Train: begin training and evaluation
[13:52:48] DeepAR.Train: Epoch 1/20
[13:54:23] DeepAR.Train: Loading the datasets...
[13:54:23] DeepAR.Data: train_len: 27688
[13:54:23] DeepAR.Data: building datasets from ../../traindata/...
[13:54:23] DeepAR.Data: test_len: 12522
[13:54:23] DeepAR.Data: building datasets from ../../traindata/...
[13:54:23] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[13:54:23] DeepAR.Data: num samples: 27688
[13:54:23] DeepAR.Train: Loading complete.
[13:54:23] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[13:54:23] DeepAR.Train: Starting training for 20 epoch(s)
[13:54:23] DeepAR.Train: begin training and evaluation
[13:54:23] DeepAR.Train: Epoch 1/20
[13:55:09] DeepAR.Train: Loading the datasets...
[13:55:09] DeepAR.Data: train_len: 27688
[13:55:09] DeepAR.Data: building datasets from ../../traindata/...
[13:55:09] DeepAR.Data: test_len: 12522
[13:55:09] DeepAR.Data: building datasets from ../../traindata/...
[13:55:09] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[13:55:09] DeepAR.Data: num samples: 27688
[13:55:09] DeepAR.Train: Loading complete.
[13:55:09] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[13:55:09] DeepAR.Train: Starting training for 20 epoch(s)
[13:55:09] DeepAR.Train: begin training and evaluation
[13:55:09] DeepAR.Train: Epoch 1/20
[05:11:13] DeepAR.Train: Loading the datasets...
[05:15:50] DeepAR.Train: Loading the datasets...
[05:16:05] DeepAR.Train: Loading the datasets...
[05:16:37] DeepAR.Train: Loading the datasets...
[05:16:54] DeepAR.Train: Loading the datasets...
[05:17:33] DeepAR.Train: Loading the datasets...
[05:17:35] DeepAR.Data: train_len: 27688
[05:17:35] DeepAR.Data: building datasets from ../traindata/...
[05:17:36] DeepAR.Data: test_len: 12522
[05:17:36] DeepAR.Data: building datasets from ../traindata/...
[05:17:37] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[05:17:37] DeepAR.Data: num samples: 27688
[05:17:37] DeepAR.Train: Loading complete.
[05:17:37] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.float32 of size 128x23 (cuda:0)]
      (1): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (2): Parameter containing: [torch.float32 of size 128x128 (cuda:0)]
      (3): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (4): Parameter containing: [torch.float32 of size 128x128 (cuda:0)]
      (5): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (6): Parameter containing: [torch.float32 of size 128x128 (cuda:0)]
      (7): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (8): Parameter containing: [torch.float32 of size 4x128 (cuda:0)]
      (9): Parameter containing: [torch.float32 of size 4x128 (cuda:0)]
      (10): Parameter containing: [torch.float32 of size 23x4 (cuda:0)]
      (11): Parameter containing: [torch.float32 of size 23 (cuda:0)]
      (12): Parameter containing: [torch.float32 of size 1x4 (cuda:0)]
      (13): Parameter containing: [torch.float32 of size 1 (cuda:0)]
      (14): Parameter containing: [torch.float32 of size 128x23 (cuda:0)]
      (15): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (16): Parameter containing: [torch.float32 of size 128x128 (cuda:0)]
      (17): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (18): Parameter containing: [torch.float32 of size 128x128 (cuda:0)]
      (19): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (20): Parameter containing: [torch.float32 of size 128x128 (cuda:0)]
      (21): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (22): Parameter containing: [torch.float32 of size 4x128 (cuda:0)]
      (23): Parameter containing: [torch.float32 of size 4x128 (cuda:0)]
      (24): Parameter containing: [torch.float32 of size 23x4 (cuda:0)]
      (25): Parameter containing: [torch.float32 of size 23 (cuda:0)]
      (26): Parameter containing: [torch.float32 of size 1x4 (cuda:0)]
      (27): Parameter containing: [torch.float32 of size 1 (cuda:0)]
      (28): Parameter containing: [torch.float32 of size 128x23 (cuda:0)]
      (29): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (30): Parameter containing: [torch.float32 of size 128x128 (cuda:0)]
      (31): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (32): Parameter containing: [torch.float32 of size 128x128 (cuda:0)]
      (33): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (34): Parameter containing: [torch.float32 of size 128x128 (cuda:0)]
      (35): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (36): Parameter containing: [torch.float32 of size 4x128 (cuda:0)]
      (37): Parameter containing: [torch.float32 of size 4x128 (cuda:0)]
      (38): Parameter containing: [torch.float32 of size 23x4 (cuda:0)]
      (39): Parameter containing: [torch.float32 of size 23 (cuda:0)]
      (40): Parameter containing: [torch.float32 of size 1x4 (cuda:0)]
      (41): Parameter containing: [torch.float32 of size 1 (cuda:0)]
      (42): Parameter containing: [torch.float32 of size 128x23 (cuda:0)]
      (43): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (44): Parameter containing: [torch.float32 of size 128x128 (cuda:0)]
      (45): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (46): Parameter containing: [torch.float32 of size 128x128 (cuda:0)]
      (47): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (48): Parameter containing: [torch.float32 of size 128x128 (cuda:0)]
      (49): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (50): Parameter containing: [torch.float32 of size 8x128 (cuda:0)]
      (51): Parameter containing: [torch.float32 of size 8x128 (cuda:0)]
      (52): Parameter containing: [torch.float32 of size 23x8 (cuda:0)]
      (53): Parameter containing: [torch.float32 of size 23 (cuda:0)]
      (54): Parameter containing: [torch.float32 of size 1x8 (cuda:0)]
      (55): Parameter containing: [torch.float32 of size 1 (cuda:0)]
      (56): Parameter containing: [torch.float32 of size 128x23 (cuda:0)]
      (57): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (58): Parameter containing: [torch.float32 of size 128x128 (cuda:0)]
      (59): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (60): Parameter containing: [torch.float32 of size 128x128 (cuda:0)]
      (61): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (62): Parameter containing: [torch.float32 of size 128x128 (cuda:0)]
      (63): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (64): Parameter containing: [torch.float32 of size 8x128 (cuda:0)]
      (65): Parameter containing: [torch.float32 of size 8x128 (cuda:0)]
      (66): Parameter containing: [torch.float32 of size 23x8 (cuda:0)]
      (67): Parameter containing: [torch.float32 of size 23 (cuda:0)]
      (68): Parameter containing: [torch.float32 of size 1x8 (cuda:0)]
      (69): Parameter containing: [torch.float32 of size 1 (cuda:0)]
      (70): Parameter containing: [torch.float32 of size 128x23 (cuda:0)]
      (71): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (72): Parameter containing: [torch.float32 of size 128x128 (cuda:0)]
      (73): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (74): Parameter containing: [torch.float32 of size 128x128 (cuda:0)]
      (75): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (76): Parameter containing: [torch.float32 of size 128x128 (cuda:0)]
      (77): Parameter containing: [torch.float32 of size 128 (cuda:0)]
      (78): Parameter containing: [torch.float32 of size 8x128 (cuda:0)]
      (79): Parameter containing: [torch.float32 of size 8x128 (cuda:0)]
      (80): Parameter containing: [torch.float32 of size 23x8 (cuda:0)]
      (81): Parameter containing: [torch.float32 of size 23 (cuda:0)]
      (82): Parameter containing: [torch.float32 of size 1x8 (cuda:0)]
      (83): Parameter containing: [torch.float32 of size 1 (cuda:0)]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[05:17:38] DeepAR.Train: Starting training for 20 epoch(s)
[05:17:38] DeepAR.Train: begin training and evaluation
[05:17:38] DeepAR.Train: Epoch 1/20
[14:36:57] DeepAR.Train: Loading the datasets...
[14:36:57] DeepAR.Data: train_len: 27688
[14:36:57] DeepAR.Data: building datasets from ../traindata/...
[14:36:57] DeepAR.Data: test_len: 12522
[14:36:57] DeepAR.Data: building datasets from ../traindata/...
[14:36:57] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[14:36:57] DeepAR.Data: num samples: 27688
[14:36:57] DeepAR.Train: Loading complete.
[14:36:57] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[14:36:57] DeepAR.Train: Starting training for 20 epoch(s)
[14:36:57] DeepAR.Train: begin training and evaluation
[14:36:57] DeepAR.Train: Epoch 1/20
[14:38:48] DeepAR.Train: Loading the datasets...
[14:38:48] DeepAR.Data: train_len: 27688
[14:38:48] DeepAR.Data: building datasets from ../traindata/...
[14:38:48] DeepAR.Data: test_len: 12522
[14:38:48] DeepAR.Data: building datasets from ../traindata/...
[14:38:48] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[14:38:48] DeepAR.Data: num samples: 27688
[14:38:48] DeepAR.Train: Loading complete.
[14:38:48] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x23]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 23x4]
      (11): Parameter containing: [torch.FloatTensor of size 23]
      (12): Parameter containing: [torch.FloatTensor of size 1x4]
      (13): Parameter containing: [torch.FloatTensor of size 1]
      (14): Parameter containing: [torch.FloatTensor of size 128x23]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 23x4]
      (25): Parameter containing: [torch.FloatTensor of size 23]
      (26): Parameter containing: [torch.FloatTensor of size 1x4]
      (27): Parameter containing: [torch.FloatTensor of size 1]
      (28): Parameter containing: [torch.FloatTensor of size 128x23]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 23x4]
      (39): Parameter containing: [torch.FloatTensor of size 23]
      (40): Parameter containing: [torch.FloatTensor of size 1x4]
      (41): Parameter containing: [torch.FloatTensor of size 1]
      (42): Parameter containing: [torch.FloatTensor of size 128x23]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 23x8]
      (53): Parameter containing: [torch.FloatTensor of size 23]
      (54): Parameter containing: [torch.FloatTensor of size 1x8]
      (55): Parameter containing: [torch.FloatTensor of size 1]
      (56): Parameter containing: [torch.FloatTensor of size 128x23]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 23x8]
      (67): Parameter containing: [torch.FloatTensor of size 23]
      (68): Parameter containing: [torch.FloatTensor of size 1x8]
      (69): Parameter containing: [torch.FloatTensor of size 1]
      (70): Parameter containing: [torch.FloatTensor of size 128x23]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 23x8]
      (81): Parameter containing: [torch.FloatTensor of size 23]
      (82): Parameter containing: [torch.FloatTensor of size 1x8]
      (83): Parameter containing: [torch.FloatTensor of size 1]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[14:38:48] DeepAR.Train: Starting training for 20 epoch(s)
[14:38:48] DeepAR.Train: begin training and evaluation
[14:38:48] DeepAR.Train: Epoch 1/20
[22:08:48] DeepAR.Train: Loading the datasets...
[22:08:48] DeepAR.Data: train_len: 27688
[22:08:48] DeepAR.Data: building datasets from ../traindata/...
[22:08:48] DeepAR.Data: test_len: 12522
[22:08:48] DeepAR.Data: building datasets from ../traindata/...
[22:08:48] DeepAR.Data: weights: tensor([3.6318e-05, 3.6365e-05, 3.6434e-05,  ..., 3.5964e-05, 3.5969e-05,
        3.6009e-05], dtype=torch.float64)
[22:08:48] DeepAR.Data: num samples: 27688
[22:08:48] DeepAR.Train: Loading complete.
[22:08:48] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x42]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 42x4]
      (11): Parameter containing: [torch.FloatTensor of size 42]
      (12): Parameter containing: [torch.FloatTensor of size 6x4]
      (13): Parameter containing: [torch.FloatTensor of size 6]
      (14): Parameter containing: [torch.FloatTensor of size 128x42]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 42x4]
      (25): Parameter containing: [torch.FloatTensor of size 42]
      (26): Parameter containing: [torch.FloatTensor of size 6x4]
      (27): Parameter containing: [torch.FloatTensor of size 6]
      (28): Parameter containing: [torch.FloatTensor of size 128x42]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 42x4]
      (39): Parameter containing: [torch.FloatTensor of size 42]
      (40): Parameter containing: [torch.FloatTensor of size 6x4]
      (41): Parameter containing: [torch.FloatTensor of size 6]
      (42): Parameter containing: [torch.FloatTensor of size 128x42]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 42x8]
      (53): Parameter containing: [torch.FloatTensor of size 42]
      (54): Parameter containing: [torch.FloatTensor of size 6x8]
      (55): Parameter containing: [torch.FloatTensor of size 6]
      (56): Parameter containing: [torch.FloatTensor of size 128x42]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 42x8]
      (67): Parameter containing: [torch.FloatTensor of size 42]
      (68): Parameter containing: [torch.FloatTensor of size 6x8]
      (69): Parameter containing: [torch.FloatTensor of size 6]
      (70): Parameter containing: [torch.FloatTensor of size 128x42]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 42x8]
      (81): Parameter containing: [torch.FloatTensor of size 42]
      (82): Parameter containing: [torch.FloatTensor of size 6x8]
      (83): Parameter containing: [torch.FloatTensor of size 6]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[22:08:48] DeepAR.Train: Starting training for 20 epoch(s)
[22:08:48] DeepAR.Train: begin training and evaluation
[22:08:48] DeepAR.Train: Epoch 1/20
[22:12:41] DeepAR.Train: Loading the datasets...
[22:12:41] DeepAR.Data: train_len: 18448
[22:12:41] DeepAR.Data: building datasets from ../traindata/...
[22:12:41] DeepAR.Data: test_len: 8337
[22:12:41] DeepAR.Data: building datasets from ../traindata/...
[22:12:41] DeepAR.Data: weights: tensor([5.4659e-05, 5.4703e-05, 5.4755e-05,  ..., 5.4013e-05, 5.4008e-05,
        5.4011e-05], dtype=torch.float64)
[22:12:41] DeepAR.Data: num samples: 18448
[22:12:41] DeepAR.Train: Loading complete.
[22:12:41] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x42]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 42x4]
      (11): Parameter containing: [torch.FloatTensor of size 42]
      (12): Parameter containing: [torch.FloatTensor of size 6x4]
      (13): Parameter containing: [torch.FloatTensor of size 6]
      (14): Parameter containing: [torch.FloatTensor of size 128x42]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 42x4]
      (25): Parameter containing: [torch.FloatTensor of size 42]
      (26): Parameter containing: [torch.FloatTensor of size 6x4]
      (27): Parameter containing: [torch.FloatTensor of size 6]
      (28): Parameter containing: [torch.FloatTensor of size 128x42]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 42x4]
      (39): Parameter containing: [torch.FloatTensor of size 42]
      (40): Parameter containing: [torch.FloatTensor of size 6x4]
      (41): Parameter containing: [torch.FloatTensor of size 6]
      (42): Parameter containing: [torch.FloatTensor of size 128x42]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 42x8]
      (53): Parameter containing: [torch.FloatTensor of size 42]
      (54): Parameter containing: [torch.FloatTensor of size 6x8]
      (55): Parameter containing: [torch.FloatTensor of size 6]
      (56): Parameter containing: [torch.FloatTensor of size 128x42]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 42x8]
      (67): Parameter containing: [torch.FloatTensor of size 42]
      (68): Parameter containing: [torch.FloatTensor of size 6x8]
      (69): Parameter containing: [torch.FloatTensor of size 6]
      (70): Parameter containing: [torch.FloatTensor of size 128x42]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 42x8]
      (81): Parameter containing: [torch.FloatTensor of size 42]
      (82): Parameter containing: [torch.FloatTensor of size 6x8]
      (83): Parameter containing: [torch.FloatTensor of size 6]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[22:12:41] DeepAR.Train: Starting training for 20 epoch(s)
[22:12:41] DeepAR.Train: begin training and evaluation
[22:12:41] DeepAR.Train: Epoch 1/20
[22:26:28] DeepAR.Train: Loading the datasets...
[22:26:28] DeepAR.Data: train_len: 18448
[22:26:28] DeepAR.Data: building datasets from ../traindata/...
[22:26:28] DeepAR.Data: test_len: 8337
[22:26:28] DeepAR.Data: building datasets from ../traindata/...
[22:26:28] DeepAR.Data: weights: tensor([5.4659e-05, 5.4703e-05, 5.4755e-05,  ..., 5.4013e-05, 5.4008e-05,
        5.4011e-05], dtype=torch.float64)
[22:26:28] DeepAR.Data: num samples: 18448
[22:26:28] DeepAR.Train: Loading complete.
[22:26:28] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x42]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 42x4]
      (11): Parameter containing: [torch.FloatTensor of size 42]
      (12): Parameter containing: [torch.FloatTensor of size 6x4]
      (13): Parameter containing: [torch.FloatTensor of size 6]
      (14): Parameter containing: [torch.FloatTensor of size 128x42]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 42x4]
      (25): Parameter containing: [torch.FloatTensor of size 42]
      (26): Parameter containing: [torch.FloatTensor of size 6x4]
      (27): Parameter containing: [torch.FloatTensor of size 6]
      (28): Parameter containing: [torch.FloatTensor of size 128x42]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 42x4]
      (39): Parameter containing: [torch.FloatTensor of size 42]
      (40): Parameter containing: [torch.FloatTensor of size 6x4]
      (41): Parameter containing: [torch.FloatTensor of size 6]
      (42): Parameter containing: [torch.FloatTensor of size 128x42]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 42x8]
      (53): Parameter containing: [torch.FloatTensor of size 42]
      (54): Parameter containing: [torch.FloatTensor of size 6x8]
      (55): Parameter containing: [torch.FloatTensor of size 6]
      (56): Parameter containing: [torch.FloatTensor of size 128x42]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 42x8]
      (67): Parameter containing: [torch.FloatTensor of size 42]
      (68): Parameter containing: [torch.FloatTensor of size 6x8]
      (69): Parameter containing: [torch.FloatTensor of size 6]
      (70): Parameter containing: [torch.FloatTensor of size 128x42]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 42x8]
      (81): Parameter containing: [torch.FloatTensor of size 42]
      (82): Parameter containing: [torch.FloatTensor of size 6x8]
      (83): Parameter containing: [torch.FloatTensor of size 6]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[22:26:28] DeepAR.Train: Starting training for 20 epoch(s)
[22:26:28] DeepAR.Train: begin training and evaluation
[22:26:28] DeepAR.Train: Epoch 1/20
[22:31:49] DeepAR.Train: Loading the datasets...
[22:31:49] DeepAR.Data: train_len: 18448
[22:31:49] DeepAR.Data: building datasets from ../traindata/...
[22:31:49] DeepAR.Data: test_len: 8337
[22:31:49] DeepAR.Data: building datasets from ../traindata/...
[22:31:49] DeepAR.Data: weights: tensor([5.4659e-05, 5.4703e-05, 5.4755e-05,  ..., 5.4013e-05, 5.4008e-05,
        5.4011e-05], dtype=torch.float64)
[22:31:49] DeepAR.Data: num samples: 18448
[22:31:49] DeepAR.Train: Loading complete.
[22:31:49] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x42]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 42x4]
      (11): Parameter containing: [torch.FloatTensor of size 42]
      (12): Parameter containing: [torch.FloatTensor of size 6x4]
      (13): Parameter containing: [torch.FloatTensor of size 6]
      (14): Parameter containing: [torch.FloatTensor of size 128x42]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 42x4]
      (25): Parameter containing: [torch.FloatTensor of size 42]
      (26): Parameter containing: [torch.FloatTensor of size 6x4]
      (27): Parameter containing: [torch.FloatTensor of size 6]
      (28): Parameter containing: [torch.FloatTensor of size 128x42]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 42x4]
      (39): Parameter containing: [torch.FloatTensor of size 42]
      (40): Parameter containing: [torch.FloatTensor of size 6x4]
      (41): Parameter containing: [torch.FloatTensor of size 6]
      (42): Parameter containing: [torch.FloatTensor of size 128x42]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 42x8]
      (53): Parameter containing: [torch.FloatTensor of size 42]
      (54): Parameter containing: [torch.FloatTensor of size 6x8]
      (55): Parameter containing: [torch.FloatTensor of size 6]
      (56): Parameter containing: [torch.FloatTensor of size 128x42]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 42x8]
      (67): Parameter containing: [torch.FloatTensor of size 42]
      (68): Parameter containing: [torch.FloatTensor of size 6x8]
      (69): Parameter containing: [torch.FloatTensor of size 6]
      (70): Parameter containing: [torch.FloatTensor of size 128x42]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 42x8]
      (81): Parameter containing: [torch.FloatTensor of size 42]
      (82): Parameter containing: [torch.FloatTensor of size 6x8]
      (83): Parameter containing: [torch.FloatTensor of size 6]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[22:31:49] DeepAR.Train: Starting training for 20 epoch(s)
[22:31:49] DeepAR.Train: begin training and evaluation
[22:31:49] DeepAR.Train: Epoch 1/20
[22:33:17] DeepAR.Train: Loading the datasets...
[22:33:17] DeepAR.Data: train_len: 18448
[22:33:17] DeepAR.Data: building datasets from ../traindata/...
[22:33:17] DeepAR.Data: test_len: 8337
[22:33:17] DeepAR.Data: building datasets from ../traindata/...
[22:33:17] DeepAR.Data: weights: tensor([5.4659e-05, 5.4703e-05, 5.4755e-05,  ..., 5.4013e-05, 5.4008e-05,
        5.4011e-05], dtype=torch.float64)
[22:33:17] DeepAR.Data: num samples: 18448
[22:33:17] DeepAR.Train: Loading complete.
[22:33:17] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x42]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 42x4]
      (11): Parameter containing: [torch.FloatTensor of size 42]
      (12): Parameter containing: [torch.FloatTensor of size 6x4]
      (13): Parameter containing: [torch.FloatTensor of size 6]
      (14): Parameter containing: [torch.FloatTensor of size 128x42]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 42x4]
      (25): Parameter containing: [torch.FloatTensor of size 42]
      (26): Parameter containing: [torch.FloatTensor of size 6x4]
      (27): Parameter containing: [torch.FloatTensor of size 6]
      (28): Parameter containing: [torch.FloatTensor of size 128x42]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 42x4]
      (39): Parameter containing: [torch.FloatTensor of size 42]
      (40): Parameter containing: [torch.FloatTensor of size 6x4]
      (41): Parameter containing: [torch.FloatTensor of size 6]
      (42): Parameter containing: [torch.FloatTensor of size 128x42]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 42x8]
      (53): Parameter containing: [torch.FloatTensor of size 42]
      (54): Parameter containing: [torch.FloatTensor of size 6x8]
      (55): Parameter containing: [torch.FloatTensor of size 6]
      (56): Parameter containing: [torch.FloatTensor of size 128x42]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 42x8]
      (67): Parameter containing: [torch.FloatTensor of size 42]
      (68): Parameter containing: [torch.FloatTensor of size 6x8]
      (69): Parameter containing: [torch.FloatTensor of size 6]
      (70): Parameter containing: [torch.FloatTensor of size 128x42]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 42x8]
      (81): Parameter containing: [torch.FloatTensor of size 42]
      (82): Parameter containing: [torch.FloatTensor of size 6x8]
      (83): Parameter containing: [torch.FloatTensor of size 6]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[22:33:17] DeepAR.Train: Starting training for 20 epoch(s)
[22:33:17] DeepAR.Train: begin training and evaluation
[22:33:17] DeepAR.Train: Epoch 1/20
[22:52:10] DeepAR.Train: Loading the datasets...
[22:52:10] DeepAR.Data: train_len: 18448
[22:52:10] DeepAR.Data: building datasets from ../traindata/...
[22:52:10] DeepAR.Data: test_len: 8337
[22:52:10] DeepAR.Data: building datasets from ../traindata/...
[22:52:10] DeepAR.Data: weights: tensor([5.4659e-05, 5.4703e-05, 5.4755e-05,  ..., 5.4013e-05, 5.4008e-05,
        5.4011e-05], dtype=torch.float64)
[22:52:10] DeepAR.Data: num samples: 18448
[22:52:10] DeepAR.Train: Loading complete.
[22:52:10] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x42]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 42x4]
      (11): Parameter containing: [torch.FloatTensor of size 42]
      (12): Parameter containing: [torch.FloatTensor of size 6x4]
      (13): Parameter containing: [torch.FloatTensor of size 6]
      (14): Parameter containing: [torch.FloatTensor of size 128x42]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 42x4]
      (25): Parameter containing: [torch.FloatTensor of size 42]
      (26): Parameter containing: [torch.FloatTensor of size 6x4]
      (27): Parameter containing: [torch.FloatTensor of size 6]
      (28): Parameter containing: [torch.FloatTensor of size 128x42]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 42x4]
      (39): Parameter containing: [torch.FloatTensor of size 42]
      (40): Parameter containing: [torch.FloatTensor of size 6x4]
      (41): Parameter containing: [torch.FloatTensor of size 6]
      (42): Parameter containing: [torch.FloatTensor of size 128x42]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 42x8]
      (53): Parameter containing: [torch.FloatTensor of size 42]
      (54): Parameter containing: [torch.FloatTensor of size 6x8]
      (55): Parameter containing: [torch.FloatTensor of size 6]
      (56): Parameter containing: [torch.FloatTensor of size 128x42]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 42x8]
      (67): Parameter containing: [torch.FloatTensor of size 42]
      (68): Parameter containing: [torch.FloatTensor of size 6x8]
      (69): Parameter containing: [torch.FloatTensor of size 6]
      (70): Parameter containing: [torch.FloatTensor of size 128x42]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 42x8]
      (81): Parameter containing: [torch.FloatTensor of size 42]
      (82): Parameter containing: [torch.FloatTensor of size 6x8]
      (83): Parameter containing: [torch.FloatTensor of size 6]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[22:52:10] DeepAR.Train: Starting training for 20 epoch(s)
[22:52:10] DeepAR.Train: begin training and evaluation
[22:52:10] DeepAR.Train: Epoch 1/20
[00:18:02] DeepAR.Train: Loading the datasets...
[00:18:02] DeepAR.Data: train_len: 18448
[00:18:02] DeepAR.Data: building datasets from ../traindata/...
[00:18:02] DeepAR.Data: test_len: 8337
[00:18:02] DeepAR.Data: building datasets from ../traindata/...
[00:18:02] DeepAR.Data: weights: tensor([5.4659e-05, 5.4703e-05, 5.4755e-05,  ..., 5.4013e-05, 5.4008e-05,
        5.4011e-05], dtype=torch.float64)
[00:18:02] DeepAR.Data: num samples: 18448
[00:18:02] DeepAR.Train: Loading complete.
[00:18:02] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x42]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 42x4]
      (11): Parameter containing: [torch.FloatTensor of size 42]
      (12): Parameter containing: [torch.FloatTensor of size 6x4]
      (13): Parameter containing: [torch.FloatTensor of size 6]
      (14): Parameter containing: [torch.FloatTensor of size 128x42]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 42x4]
      (25): Parameter containing: [torch.FloatTensor of size 42]
      (26): Parameter containing: [torch.FloatTensor of size 6x4]
      (27): Parameter containing: [torch.FloatTensor of size 6]
      (28): Parameter containing: [torch.FloatTensor of size 128x42]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 42x4]
      (39): Parameter containing: [torch.FloatTensor of size 42]
      (40): Parameter containing: [torch.FloatTensor of size 6x4]
      (41): Parameter containing: [torch.FloatTensor of size 6]
      (42): Parameter containing: [torch.FloatTensor of size 128x42]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 42x8]
      (53): Parameter containing: [torch.FloatTensor of size 42]
      (54): Parameter containing: [torch.FloatTensor of size 6x8]
      (55): Parameter containing: [torch.FloatTensor of size 6]
      (56): Parameter containing: [torch.FloatTensor of size 128x42]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 42x8]
      (67): Parameter containing: [torch.FloatTensor of size 42]
      (68): Parameter containing: [torch.FloatTensor of size 6x8]
      (69): Parameter containing: [torch.FloatTensor of size 6]
      (70): Parameter containing: [torch.FloatTensor of size 128x42]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 42x8]
      (81): Parameter containing: [torch.FloatTensor of size 42]
      (82): Parameter containing: [torch.FloatTensor of size 6x8]
      (83): Parameter containing: [torch.FloatTensor of size 6]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[00:18:02] DeepAR.Train: Starting training for 150 epoch(s)
[00:18:02] DeepAR.Train: begin training and evaluation
[00:18:02] DeepAR.Train: Epoch 1/150
[00:18:39] DeepAR.Train: Loading the datasets...
[00:18:39] DeepAR.Data: train_len: 18448
[00:18:39] DeepAR.Data: building datasets from ../traindata/...
[00:18:39] DeepAR.Data: test_len: 8337
[00:18:39] DeepAR.Data: building datasets from ../traindata/...
[00:18:39] DeepAR.Data: weights: tensor([5.4659e-05, 5.4703e-05, 5.4755e-05,  ..., 5.4013e-05, 5.4008e-05,
        5.4011e-05], dtype=torch.float64)
[00:18:39] DeepAR.Data: num samples: 18448
[00:18:39] DeepAR.Train: Loading complete.
[00:18:39] DeepAR.Train: Model: 
NBeatsNet(
  (parameters): ParameterList(
      (0): Parameter containing: [torch.FloatTensor of size 128x42]
      (1): Parameter containing: [torch.FloatTensor of size 128]
      (2): Parameter containing: [torch.FloatTensor of size 128x128]
      (3): Parameter containing: [torch.FloatTensor of size 128]
      (4): Parameter containing: [torch.FloatTensor of size 128x128]
      (5): Parameter containing: [torch.FloatTensor of size 128]
      (6): Parameter containing: [torch.FloatTensor of size 128x128]
      (7): Parameter containing: [torch.FloatTensor of size 128]
      (8): Parameter containing: [torch.FloatTensor of size 4x128]
      (9): Parameter containing: [torch.FloatTensor of size 4x128]
      (10): Parameter containing: [torch.FloatTensor of size 42x4]
      (11): Parameter containing: [torch.FloatTensor of size 42]
      (12): Parameter containing: [torch.FloatTensor of size 6x4]
      (13): Parameter containing: [torch.FloatTensor of size 6]
      (14): Parameter containing: [torch.FloatTensor of size 128x42]
      (15): Parameter containing: [torch.FloatTensor of size 128]
      (16): Parameter containing: [torch.FloatTensor of size 128x128]
      (17): Parameter containing: [torch.FloatTensor of size 128]
      (18): Parameter containing: [torch.FloatTensor of size 128x128]
      (19): Parameter containing: [torch.FloatTensor of size 128]
      (20): Parameter containing: [torch.FloatTensor of size 128x128]
      (21): Parameter containing: [torch.FloatTensor of size 128]
      (22): Parameter containing: [torch.FloatTensor of size 4x128]
      (23): Parameter containing: [torch.FloatTensor of size 4x128]
      (24): Parameter containing: [torch.FloatTensor of size 42x4]
      (25): Parameter containing: [torch.FloatTensor of size 42]
      (26): Parameter containing: [torch.FloatTensor of size 6x4]
      (27): Parameter containing: [torch.FloatTensor of size 6]
      (28): Parameter containing: [torch.FloatTensor of size 128x42]
      (29): Parameter containing: [torch.FloatTensor of size 128]
      (30): Parameter containing: [torch.FloatTensor of size 128x128]
      (31): Parameter containing: [torch.FloatTensor of size 128]
      (32): Parameter containing: [torch.FloatTensor of size 128x128]
      (33): Parameter containing: [torch.FloatTensor of size 128]
      (34): Parameter containing: [torch.FloatTensor of size 128x128]
      (35): Parameter containing: [torch.FloatTensor of size 128]
      (36): Parameter containing: [torch.FloatTensor of size 4x128]
      (37): Parameter containing: [torch.FloatTensor of size 4x128]
      (38): Parameter containing: [torch.FloatTensor of size 42x4]
      (39): Parameter containing: [torch.FloatTensor of size 42]
      (40): Parameter containing: [torch.FloatTensor of size 6x4]
      (41): Parameter containing: [torch.FloatTensor of size 6]
      (42): Parameter containing: [torch.FloatTensor of size 128x42]
      (43): Parameter containing: [torch.FloatTensor of size 128]
      (44): Parameter containing: [torch.FloatTensor of size 128x128]
      (45): Parameter containing: [torch.FloatTensor of size 128]
      (46): Parameter containing: [torch.FloatTensor of size 128x128]
      (47): Parameter containing: [torch.FloatTensor of size 128]
      (48): Parameter containing: [torch.FloatTensor of size 128x128]
      (49): Parameter containing: [torch.FloatTensor of size 128]
      (50): Parameter containing: [torch.FloatTensor of size 8x128]
      (51): Parameter containing: [torch.FloatTensor of size 8x128]
      (52): Parameter containing: [torch.FloatTensor of size 42x8]
      (53): Parameter containing: [torch.FloatTensor of size 42]
      (54): Parameter containing: [torch.FloatTensor of size 6x8]
      (55): Parameter containing: [torch.FloatTensor of size 6]
      (56): Parameter containing: [torch.FloatTensor of size 128x42]
      (57): Parameter containing: [torch.FloatTensor of size 128]
      (58): Parameter containing: [torch.FloatTensor of size 128x128]
      (59): Parameter containing: [torch.FloatTensor of size 128]
      (60): Parameter containing: [torch.FloatTensor of size 128x128]
      (61): Parameter containing: [torch.FloatTensor of size 128]
      (62): Parameter containing: [torch.FloatTensor of size 128x128]
      (63): Parameter containing: [torch.FloatTensor of size 128]
      (64): Parameter containing: [torch.FloatTensor of size 8x128]
      (65): Parameter containing: [torch.FloatTensor of size 8x128]
      (66): Parameter containing: [torch.FloatTensor of size 42x8]
      (67): Parameter containing: [torch.FloatTensor of size 42]
      (68): Parameter containing: [torch.FloatTensor of size 6x8]
      (69): Parameter containing: [torch.FloatTensor of size 6]
      (70): Parameter containing: [torch.FloatTensor of size 128x42]
      (71): Parameter containing: [torch.FloatTensor of size 128]
      (72): Parameter containing: [torch.FloatTensor of size 128x128]
      (73): Parameter containing: [torch.FloatTensor of size 128]
      (74): Parameter containing: [torch.FloatTensor of size 128x128]
      (75): Parameter containing: [torch.FloatTensor of size 128]
      (76): Parameter containing: [torch.FloatTensor of size 128x128]
      (77): Parameter containing: [torch.FloatTensor of size 128]
      (78): Parameter containing: [torch.FloatTensor of size 8x128]
      (79): Parameter containing: [torch.FloatTensor of size 8x128]
      (80): Parameter containing: [torch.FloatTensor of size 42x8]
      (81): Parameter containing: [torch.FloatTensor of size 42]
      (82): Parameter containing: [torch.FloatTensor of size 6x8]
      (83): Parameter containing: [torch.FloatTensor of size 6]
  )
  (dropout): Dropout(p=0.5, inplace=False)
)
[00:18:39] DeepAR.Train: Starting training for 150 epoch(s)
[00:18:39] DeepAR.Train: begin training and evaluation
[00:18:39] DeepAR.Train: Epoch 1/150
[19:19:03] DeepAR.Train: Loading the datasets...
[19:21:18] DeepAR.Train: Loading the datasets...
[11:36:28] DeepAR.Train: Loading the datasets...
[11:37:39] DeepAR.Train: Loading the datasets...
[11:41:57] DeepAR.Train: Loading the datasets...
[11:42:50] DeepAR.Train: Loading the datasets...
[11:43:41] DeepAR.Train: Loading the datasets...
[11:45:13] DeepAR.Train: Loading the datasets...
[11:45:24] DeepAR.Train: Loading the datasets...
[11:45:25] DeepAR.Data: train_len: 9900
[11:45:25] DeepAR.Data: building datasets from ..\..\trainfull\...
[11:45:28] DeepAR.Data: test_len: 6398
[11:45:28] DeepAR.Data: building datasets from ..\..\trainfull\...
[11:45:31] DeepAR.Data: weights: tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001],
       dtype=torch.float64)
[11:45:31] DeepAR.Data: num samples: 9900
[11:45:35] DeepAR.Train: Loading complete.
[11:52:44] DeepAR.Train: Loading the datasets...
[11:52:47] DeepAR.Data: train_len: 9900
[11:52:47] DeepAR.Data: building datasets from ..\..\trainfull\...
[11:52:47] DeepAR.Data: test_len: 6398
[11:52:47] DeepAR.Data: building datasets from ..\..\trainfull\...
[11:52:47] DeepAR.Data: weights: tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001],
       dtype=torch.float64)
[11:52:47] DeepAR.Data: num samples: 9900
[11:52:47] DeepAR.Train: Loading complete.
[11:52:47] DeepAR.Train: Model: 
SQF_RNN(
  (encoder): Encoder(
    (lstm): LSTM(6, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (decoder): Decoder(
    (lstm): LSTM(128, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (beta_map): Linear(in_features=128, out_features=288, bias=True)
  (softplus): Softplus(beta=1, threshold=20)
  (gamma_map): Linear(in_features=128, out_features=6, bias=True)
)
[11:52:47] DeepAR.Train: Starting training for 50 epoch(s)
[11:52:47] DeepAR.Train: begin training and evaluation
[11:52:47] DeepAR.Train: Epoch 1/50
[11:58:15] DeepAR.Train: Loading the datasets...
[11:58:15] DeepAR.Data: train_len: 9900
[11:58:15] DeepAR.Data: building datasets from ..\..\trainfull\...
[11:58:15] DeepAR.Data: test_len: 6398
[11:58:15] DeepAR.Data: building datasets from ..\..\trainfull\...
[11:58:15] DeepAR.Data: weights: tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001],
       dtype=torch.float64)
[11:58:15] DeepAR.Data: num samples: 9900
[11:58:15] DeepAR.Train: Loading complete.
[11:58:15] DeepAR.Train: Model: 
SQF_RNN(
  (embedding): Embedding(14, 4)
  (encoder): Encoder(
    (lstm): LSTM(6, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (decoder): Decoder(
    (lstm): LSTM(128, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (beta_map): Linear(in_features=128, out_features=288, bias=True)
  (softplus): Softplus(beta=1, threshold=20)
  (gamma_map): Linear(in_features=128, out_features=6, bias=True)
)
[11:58:15] DeepAR.Train: Starting training for 50 epoch(s)
[11:58:15] DeepAR.Train: begin training and evaluation
[11:58:15] DeepAR.Train: Epoch 1/50
[12:03:12] DeepAR.Train: Loading the datasets...
[12:03:12] DeepAR.Data: train_len: 9900
[12:03:12] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:03:12] DeepAR.Data: test_len: 6398
[12:03:12] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:03:12] DeepAR.Data: weights: tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001],
       dtype=torch.float64)
[12:03:12] DeepAR.Data: num samples: 9900
[12:03:12] DeepAR.Train: Loading complete.
[12:03:12] DeepAR.Train: Model: 
SQF_RNN(
  (embedding): Embedding(14, 5)
  (encoder): Encoder(
    (lstm): LSTM(10, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (decoder): Decoder(
    (lstm): LSTM(128, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (beta_map): Linear(in_features=128, out_features=480, bias=True)
  (softplus): Softplus(beta=1, threshold=20)
  (gamma_map): Linear(in_features=128, out_features=10, bias=True)
)
[12:03:13] DeepAR.Train: Starting training for 50 epoch(s)
[12:03:13] DeepAR.Train: begin training and evaluation
[12:03:13] DeepAR.Train: Epoch 1/50
[12:03:31] DeepAR.Train: Loading the datasets...
[12:03:31] DeepAR.Data: train_len: 9900
[12:03:31] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:03:31] DeepAR.Data: test_len: 6398
[12:03:31] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:03:31] DeepAR.Data: weights: tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001],
       dtype=torch.float64)
[12:03:31] DeepAR.Data: num samples: 9900
[12:03:31] DeepAR.Train: Loading complete.
[12:03:31] DeepAR.Train: Model: 
SQF_RNN(
  (embedding): Embedding(14, 5)
  (encoder): Encoder(
    (lstm): LSTM(10, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (decoder): Decoder(
    (lstm): LSTM(128, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (beta_map): Linear(in_features=128, out_features=480, bias=True)
  (softplus): Softplus(beta=1, threshold=20)
  (gamma_map): Linear(in_features=128, out_features=10, bias=True)
)
[12:03:32] DeepAR.Train: Starting training for 50 epoch(s)
[12:03:32] DeepAR.Train: begin training and evaluation
[12:03:32] DeepAR.Train: Epoch 1/50
[12:08:55] DeepAR.Train: Loading the datasets...
[12:08:55] DeepAR.Data: train_len: 9900
[12:08:55] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:08:55] DeepAR.Data: test_len: 6398
[12:08:55] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:08:55] DeepAR.Data: weights: tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001],
       dtype=torch.float64)
[12:08:55] DeepAR.Data: num samples: 9900
[12:08:55] DeepAR.Train: Loading complete.
[12:08:55] DeepAR.Train: Model: 
SQF_RNN(
  (embedding): Embedding(14, 5)
  (encoder): Encoder(
    (lstm): LSTM(10, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (decoder): Decoder(
    (lstm): LSTM(128, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (beta_map): Linear(in_features=128, out_features=480, bias=True)
  (softplus): Softplus(beta=1, threshold=20)
  (gamma_map): Linear(in_features=128, out_features=10, bias=True)
)
[12:08:56] DeepAR.Train: Starting training for 50 epoch(s)
[12:08:56] DeepAR.Train: begin training and evaluation
[12:08:56] DeepAR.Train: Epoch 1/50
[12:09:42] DeepAR.Train: Loading the datasets...
[12:09:42] DeepAR.Data: train_len: 9900
[12:09:42] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:09:42] DeepAR.Data: test_len: 6398
[12:09:42] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:09:42] DeepAR.Data: weights: tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001],
       dtype=torch.float64)
[12:09:42] DeepAR.Data: num samples: 9900
[12:09:42] DeepAR.Train: Loading complete.
[12:09:42] DeepAR.Train: Model: 
SQF_RNN(
  (embedding): Embedding(14, 5)
  (encoder): Encoder(
    (lstm): LSTM(10, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (decoder): Decoder(
    (lstm): LSTM(128, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (beta_map): Linear(in_features=128, out_features=480, bias=True)
  (softplus): Softplus(beta=1, threshold=20)
  (gamma_map): Linear(in_features=128, out_features=10, bias=True)
)
[12:09:43] DeepAR.Train: Starting training for 50 epoch(s)
[12:09:43] DeepAR.Train: begin training and evaluation
[12:09:43] DeepAR.Train: Epoch 1/50
[12:11:26] DeepAR.Train: Loading the datasets...
[12:11:26] DeepAR.Data: train_len: 9900
[12:11:26] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:11:26] DeepAR.Data: test_len: 6398
[12:11:26] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:11:26] DeepAR.Data: weights: tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001],
       dtype=torch.float64)
[12:11:26] DeepAR.Data: num samples: 9900
[12:11:26] DeepAR.Train: Loading complete.
[12:11:26] DeepAR.Train: Model: 
SQF_RNN(
  (embedding): Embedding(14, 5)
  (encoder): Encoder(
    (lstm): LSTM(10, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (decoder): Decoder(
    (lstm): LSTM(128, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (beta_map): Linear(in_features=128, out_features=480, bias=True)
  (softplus): Softplus(beta=1, threshold=20)
  (gamma_map): Linear(in_features=128, out_features=10, bias=True)
)
[12:11:27] DeepAR.Train: Starting training for 50 epoch(s)
[12:11:27] DeepAR.Train: begin training and evaluation
[12:11:27] DeepAR.Train: Epoch 1/50
[12:19:14] DeepAR.Train: Loading the datasets...
[12:19:14] DeepAR.Data: train_len: 9900
[12:19:14] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:19:14] DeepAR.Data: test_len: 6398
[12:19:14] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:19:14] DeepAR.Data: weights: tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001],
       dtype=torch.float64)
[12:19:14] DeepAR.Data: num samples: 9900
[12:19:14] DeepAR.Train: Loading complete.
[12:19:14] DeepAR.Train: Model: 
SQF_RNN(
  (embedding): Embedding(14, 5)
  (encoder): Encoder(
    (lstm): LSTM(10, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (decoder): Decoder(
    (lstm): LSTM(128, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (beta_map): Linear(in_features=128, out_features=480, bias=True)
  (softplus): Softplus(beta=1, threshold=20)
  (gamma_map): Linear(in_features=128, out_features=10, bias=True)
)
[12:19:14] DeepAR.Train: Starting training for 50 epoch(s)
[12:19:14] DeepAR.Train: begin training and evaluation
[12:19:14] DeepAR.Train: Epoch 1/50
[12:24:35] DeepAR.Train: Loading the datasets...
[12:24:35] DeepAR.Data: train_len: 9900
[12:24:35] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:24:35] DeepAR.Data: test_len: 6398
[12:24:35] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:24:35] DeepAR.Data: weights: tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001],
       dtype=torch.float64)
[12:24:35] DeepAR.Data: num samples: 9900
[12:24:35] DeepAR.Train: Loading complete.
[12:24:35] DeepAR.Train: Model: 
SQF_RNN(
  (embedding): Embedding(14, 5)
  (encoder): Encoder(
    (lstm): LSTM(10, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (decoder): Decoder(
    (lstm): LSTM(128, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (beta_map): Linear(in_features=128, out_features=480, bias=True)
  (softplus): Softplus(beta=1, threshold=20)
  (gamma_map): Linear(in_features=128, out_features=10, bias=True)
)
[12:24:35] DeepAR.Train: Starting training for 50 epoch(s)
[12:24:35] DeepAR.Train: begin training and evaluation
[12:24:35] DeepAR.Train: Epoch 1/50
[12:24:55] DeepAR.Train: Loading the datasets...
[12:24:55] DeepAR.Data: train_len: 9900
[12:24:55] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:24:55] DeepAR.Data: test_len: 6398
[12:24:55] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:24:55] DeepAR.Data: weights: tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001],
       dtype=torch.float64)
[12:24:55] DeepAR.Data: num samples: 9900
[12:24:55] DeepAR.Train: Loading complete.
[12:24:55] DeepAR.Train: Model: 
SQF_RNN(
  (embedding): Embedding(14, 5)
  (encoder): Encoder(
    (lstm): LSTM(10, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (decoder): Decoder(
    (lstm): LSTM(128, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (beta_map): Linear(in_features=128, out_features=480, bias=True)
  (softplus): Softplus(beta=1, threshold=20)
  (gamma_map): Linear(in_features=128, out_features=10, bias=True)
)
[12:24:56] DeepAR.Train: Starting training for 50 epoch(s)
[12:24:56] DeepAR.Train: begin training and evaluation
[12:24:56] DeepAR.Train: Epoch 1/50
[12:29:04] DeepAR.Train: Loading the datasets...
[12:29:04] DeepAR.Data: train_len: 9900
[12:29:04] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:29:04] DeepAR.Data: test_len: 6398
[12:29:04] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:29:04] DeepAR.Data: weights: tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001],
       dtype=torch.float64)
[12:29:04] DeepAR.Data: num samples: 9900
[12:29:04] DeepAR.Train: Loading complete.
[12:29:04] DeepAR.Train: Model: 
SQF_RNN(
  (embedding): Embedding(14, 5)
  (encoder): Encoder(
    (lstm): LSTM(5, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (decoder): Decoder(
    (lstm): LSTM(128, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (beta_map): Linear(in_features=128, out_features=240, bias=True)
  (softplus): Softplus(beta=1, threshold=20)
  (gamma_map): Linear(in_features=128, out_features=5, bias=True)
)
[12:29:05] DeepAR.Train: Starting training for 50 epoch(s)
[12:29:05] DeepAR.Train: begin training and evaluation
[12:29:05] DeepAR.Train: Epoch 1/50
[12:31:12] DeepAR.Train: Loading the datasets...
[12:31:12] DeepAR.Data: train_len: 9900
[12:31:12] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:31:12] DeepAR.Data: test_len: 6398
[12:31:12] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:31:12] DeepAR.Data: weights: tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001],
       dtype=torch.float64)
[12:31:12] DeepAR.Data: num samples: 9900
[12:31:12] DeepAR.Train: Loading complete.
[12:31:12] DeepAR.Train: Model: 
SQF_RNN(
  (embedding): Embedding(14, 5)
  (encoder): Encoder(
    (lstm): LSTM(5, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (decoder): Decoder(
    (lstm): LSTM(128, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (beta_map): Linear(in_features=128, out_features=240, bias=True)
  (softplus): Softplus(beta=1, threshold=20)
  (gamma_map): Linear(in_features=128, out_features=5, bias=True)
)
[12:31:13] DeepAR.Train: Starting training for 50 epoch(s)
[12:31:13] DeepAR.Train: begin training and evaluation
[12:31:13] DeepAR.Train: Epoch 1/50
[12:32:38] DeepAR.Train: Loading the datasets...
[12:32:38] DeepAR.Data: train_len: 9900
[12:32:38] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:32:38] DeepAR.Data: test_len: 6398
[12:32:38] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:32:38] DeepAR.Data: weights: tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001],
       dtype=torch.float64)
[12:32:38] DeepAR.Data: num samples: 9900
[12:32:38] DeepAR.Train: Loading complete.
[12:32:38] DeepAR.Train: Model: 
SQF_RNN(
  (embedding): Embedding(14, 5)
  (encoder): Encoder(
    (lstm): LSTM(5, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (decoder): Decoder(
    (lstm): LSTM(128, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (beta_map): Linear(in_features=128, out_features=240, bias=True)
  (softplus): Softplus(beta=1, threshold=20)
  (gamma_map): Linear(in_features=128, out_features=5, bias=True)
)
[12:32:39] DeepAR.Train: Starting training for 50 epoch(s)
[12:32:39] DeepAR.Train: begin training and evaluation
[12:32:39] DeepAR.Train: Epoch 1/50
[12:32:54] DeepAR.Train: Loading the datasets...
[12:32:54] DeepAR.Data: train_len: 9900
[12:32:54] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:32:54] DeepAR.Data: test_len: 6398
[12:32:54] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:32:54] DeepAR.Data: weights: tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001],
       dtype=torch.float64)
[12:32:54] DeepAR.Data: num samples: 9900
[12:32:54] DeepAR.Train: Loading complete.
[12:32:54] DeepAR.Train: Model: 
SQF_RNN(
  (embedding): Embedding(14, 5)
  (encoder): Encoder(
    (lstm): LSTM(5, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (decoder): Decoder(
    (lstm): LSTM(128, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (beta_map): Linear(in_features=128, out_features=240, bias=True)
  (softplus): Softplus(beta=1, threshold=20)
  (gamma_map): Linear(in_features=128, out_features=5, bias=True)
)
[12:32:55] DeepAR.Train: Starting training for 50 epoch(s)
[12:32:55] DeepAR.Train: begin training and evaluation
[12:32:55] DeepAR.Train: Epoch 1/50
[12:34:56] DeepAR.Train: Loading the datasets...
[12:34:56] DeepAR.Data: train_len: 9900
[12:34:56] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:34:56] DeepAR.Data: test_len: 6398
[12:34:56] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:34:56] DeepAR.Data: weights: tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001],
       dtype=torch.float64)
[12:34:56] DeepAR.Data: num samples: 9900
[12:34:56] DeepAR.Train: Loading complete.
[12:34:56] DeepAR.Train: Model: 
SQF_RNN(
  (embedding): Embedding(14, 5)
  (encoder): Encoder(
    (lstm): LSTM(5, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (decoder): Decoder(
    (lstm): LSTM(128, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (beta_map): Linear(in_features=128, out_features=240, bias=True)
  (softplus): Softplus(beta=1, threshold=20)
  (gamma_map): Linear(in_features=128, out_features=5, bias=True)
)
[12:34:56] DeepAR.Train: Starting training for 50 epoch(s)
[12:34:56] DeepAR.Train: begin training and evaluation
[12:34:56] DeepAR.Train: Epoch 1/50
[12:36:24] DeepAR.Train: Loading the datasets...
[12:36:24] DeepAR.Data: train_len: 9900
[12:36:24] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:36:24] DeepAR.Data: test_len: 6398
[12:36:24] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:36:24] DeepAR.Data: weights: tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001],
       dtype=torch.float64)
[12:36:24] DeepAR.Data: num samples: 9900
[12:36:24] DeepAR.Train: Loading complete.
[12:36:24] DeepAR.Train: Model: 
SQF_RNN(
  (embedding): Embedding(14, 5)
  (encoder): Encoder(
    (lstm): LSTM(5, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (decoder): Decoder(
    (lstm): LSTM(128, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (beta_map): Linear(in_features=128, out_features=240, bias=True)
  (softplus): Softplus(beta=1, threshold=20)
  (gamma_map): Linear(in_features=128, out_features=5, bias=True)
)
[12:36:24] DeepAR.Train: Starting training for 50 epoch(s)
[12:36:24] DeepAR.Train: begin training and evaluation
[12:36:24] DeepAR.Train: Epoch 1/50
[12:43:46] DeepAR.Train: Loading the datasets...
[12:43:46] DeepAR.Data: train_len: 9900
[12:43:46] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:43:46] DeepAR.Data: test_len: 6398
[12:43:46] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:43:46] DeepAR.Data: weights: tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001],
       dtype=torch.float64)
[12:43:46] DeepAR.Data: num samples: 9900
[12:43:46] DeepAR.Train: Loading complete.
[12:43:46] DeepAR.Train: Model: 
SQF_RNN(
  (embedding): Embedding(14, 5)
  (encoder): Encoder(
    (lstm): LSTM(5, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (decoder): Decoder(
    (lstm): LSTM(128, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (beta_map): Linear(in_features=128, out_features=240, bias=True)
  (softplus): Softplus(beta=1, threshold=20)
  (gamma_map): Linear(in_features=128, out_features=5, bias=True)
)
[12:43:47] DeepAR.Train: Starting training for 50 epoch(s)
[12:43:47] DeepAR.Train: begin training and evaluation
[12:43:47] DeepAR.Train: Epoch 1/50
[12:44:57] DeepAR.Train: Loading the datasets...
[12:44:57] DeepAR.Data: train_len: 9900
[12:44:57] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:44:57] DeepAR.Data: test_len: 6398
[12:44:57] DeepAR.Data: building datasets from ..\..\trainfull\...
[12:44:57] DeepAR.Data: weights: tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001],
       dtype=torch.float64)
[12:44:57] DeepAR.Data: num samples: 9900
[12:44:57] DeepAR.Train: Loading complete.
[12:44:57] DeepAR.Train: Model: 
SQF_RNN(
  (embedding): Embedding(14, 5)
  (encoder): Encoder(
    (lstm): LSTM(5, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (decoder): Decoder(
    (lstm): LSTM(128, 128, num_layers=3, batch_first=True, dropout=0.05)
  )
  (beta_map): Linear(in_features=128, out_features=240, bias=True)
  (softplus): Softplus(beta=1, threshold=20)
  (gamma_map): Linear(in_features=128, out_features=5, bias=True)
)
[12:44:58] DeepAR.Train: Starting training for 50 epoch(s)
[12:44:58] DeepAR.Train: begin training and evaluation
[12:44:58] DeepAR.Train: Epoch 1/50
